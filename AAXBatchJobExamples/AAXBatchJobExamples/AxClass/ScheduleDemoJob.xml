<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>ScheduleDemoJob</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Class for scheduling and configuring demo batch jobs.
/// Extends the RunBase class to provide dialog setup and job scheduling functionality.
/// </summary>
class ScheduleDemoJob extends RunBase
{
    DialogField fieldWorkItemCount;
    DialogField fieldBundleSize;
    DialogField fieldThrowError;
    DialogField fieldBatchJobTasks;

    // Define the parameters
    int64 workItemCount;
    int64 bundleSize;
    NoYes throwError;
    int batchJobTasks;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the dialog state into a container.
    /// </summary>
    /// <returns>A container holding the serialized dialog state.</returns>
    public container pack()
    {
        return [this.workItemCount, this.bundleSize, this.throwError, this.batchJobTasks];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deserializes the dialog state from a container.
    /// </summary>
    /// <param name="_packedClass">A container holding the serialized dialog state.</param>
    /// <returns>True if unpacking is successful.</returns>
    public boolean unpack(container _packedClass)
    {
        [this.workItemCount, this.bundleSize, this.throwError, this.batchJobTasks] = _packedClass;
        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>dialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets up the dialog for configuring the batch job.
    /// Adds fields to the dialog for work item count, bundle size, throw error, and batch job tasks.
    /// </summary>
    /// <returns>The configured dialog object.</returns>
    public Object dialog()
    {
        DialogRunbase dialog = super();

        dialog.caption("Work Item Process Dialog");

        // Add fields to the dialog
        this.fieldWorkItemCount = dialog.addFieldValue(extendedTypeStr(Integer64), this.workItemCount);
        fieldWorkItemCount.label("Work Item Count");

        this.fieldBundleSize = dialog.addFieldValue(extendedTypeStr(Integer64), this.bundleSize);
        fieldBundleSize.label("Bundle Size");

        this.fieldThrowError = dialog.addFieldValue(extendedTypeStr(NoYesId), this.throwError);
        fieldThrowError.label("Throw Error for Retry");

        this.fieldBatchJobTasks = dialog.addFieldValue(extendedTypeStr(Integer), this.bundleSize);
        fieldBatchJobTasks.label("Number of Batch Tasks");

        return dialog;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFromDialog</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrieves values from the dialog fields.
    /// </summary>
    /// <returns>True if values are successfully retrieved.</returns>
    public boolean getFromDialog()
    {
        this.workItemCount = this.fieldWorkItemCount.value();
        this.bundleSize = this.fieldBundleSize.value();
        this.throwError = this.fieldThrowError.value();
        this.batchJobTasks = this.fieldBatchJobTasks.value();

        return true;
    }

]]></Source>
			</Method>
			<Method>
				<Name>canRunInNewSession</Name>
				<Source><![CDATA[
    /// <summary>
    /// Determines if the job can run in a new session.
    /// </summary>
    /// <returns>True if the job can run in a new session.</returns>
    protected boolean canRunInNewSession()
    {
        boolean ret;
    
        ret = true;
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>